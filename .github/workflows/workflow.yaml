name: media

on:
  push:
    branches:
      - master
    paths:
      - 'packages/media/**'
    tags:
      - 'media-*'
  pull_request:
    branches:
      - master
    paths:
      - 'packages/media/**'
  workflow_dispatch

env:
  SERVICE: media
  IMAGE: eu.gcr.io/rbmh-ea-repository/eve-media-next
  SPINNAKER_APPLICATION: eamedia
  SPINNAKER_PIPELINE: eamedia-next

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7
          run_install: true

      - name: Install dependencies
        run: pnpm --filter "*$SERVICE" install --frozen-lockfile

      - name: Lint
        run: pnpm --filter "*$SERVICE" lint

      - name: Run unit tests
        run: pnpm --filter "*$SERVICE" test:unit

      - name: Run integration tests
        run: pnpm --filter "*$SERVICE" test:integration

      - name: Report coverage
        uses: codecov/codecov-action@v2
        with:
          directory: "./packages/media/coverage/"
          flags: "media"
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Run license-check
        run: pnpm --filter "*$SERVICE" license-check

  build:
    runs-on: ubuntu-20.04
    needs: verify
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: '337.0.0'
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Calculate version
        run: |
          PACKAGE_VERSION=$(jq -r .version "packages/$SERVICE/package.json")
          echo "VERSION=$PACKAGE_VERSION-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t "$IMAGE:$VERSION" --build-arg PACKAGE_NAME=$SERVICE .

      - name: Configure Docker to use gcloud registry
        run: gcloud --quiet auth configure-docker

      - name: Publish Docker image
        run: docker push "$IMAGE:$VERSION"

  step1:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    steps:
      - name: Evaluate deployment environments
        run: 
          echo "step 1"
  step2:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    steps:
      - name: Evaluate deployment environments
        run: 
          echo "step 2"